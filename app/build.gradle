plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jlleitschuh.gradle.ktlint' version '10.2.0'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-allopen'
}

def versionMajor = 2
def versionMinor = 4
def versionPatch = 3

def getGitHash = { ->
    def stdOut = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '--pretty=format:%h', '-n', '1'
        standardOutput = stdOut
    }
    return stdOut.toString().trim()
}

def getDate = { ->
    return new Date().format('yyyyMMddHHmmss')
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "foundation.e.apps"
        minSdk 25
        targetSdk 30
        versionCode versionMajor * 1000000 + versionMinor * 1000 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "BUILD_ID", "\"${getGitHash() + "." + getDate()}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        def keystore_password = System.getenv('KEYSTORE_PASSWORD')
        debugConfig {
            storeFile file("../keystore/platform.keystore")
            storePassword 'android'
            keyAlias 'platform'
            keyPassword 'android'
        }
        releaseDevConfig {
            storeFile file("../keystore/proprietary.keystore")
            storePassword keystore_password
            keyAlias 'platform.dev'
            keyPassword keystore_password
        }
        releaseStableConfig {
            storeFile file("../keystore/proprietary.keystore")
            storePassword keystore_password
            keyAlias 'platform.stable'
            keyPassword keystore_password
        }
    }

    sourceSets {
        releaseDev {
            java.srcDirs = ['src/release/java']
        }
        releaseStable {
            java.srcDirs = ['src/release/java']
        }
    }

    buildTypes {
        debug {
            versionNameSuffix ".debug"
            signingConfig signingConfigs.debugConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        releaseDev {
            minifyEnabled false
            signingConfig signingConfigs.releaseDevConfig
            sourceSets
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        releaseStable {
            minifyEnabled false
            signingConfig signingConfigs.releaseStableConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                outputFileName = "AppLounge-${variant.versionName}-${variant.buildType.name}.apk"
            }
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    lint {
        lintConfig file('lint.xml')
    }
    kotlin.sourceSets.all {
        languageSettings.useExperimentalAnnotation("kotlin.RequiresOptIn")
    }
}

kapt {
    correctErrorTypes true
}

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'foundation.e.apps.OpenClass'
    annotation 'foundation.e.apps.OpenForTesting'
}

dependencies {

    // TODO: Add splitinstall-lib to a repo https://gitlab.e.foundation/e/os/backlog/-/issues/628
    api files('libs/splitinstall-lib.jar')

    implementation 'foundation.e:gplayapi:3.0.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'androidx.core:core-google-shortcuts:1.0.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:1.4.0"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:4.6.1"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Coil and PhotoView
    implementation "io.coil-kt:coil:1.4.0"
    implementation 'com.github.Baseflow:PhotoView:2.3.0'

    //Protobuf and Gson
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "com.google.protobuf:protobuf-java:3.14.0"

    // ViewPager2 and RecyclerView
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    //logger
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Bouncy Castle
    implementation 'org.bouncycastle:bcpg-jdk15on:1.60'

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version"
    implementation "com.squareup.moshi:moshi-kotlin:1.13.0"
//    implementation "com.squareup.moshi:moshi-adapters:1.5.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.2"

    // JSON Converter
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    // YAML factory
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.2"

    // Navigation Components
    def navigation_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Hilt
    def hilt_version = '2.40.5'
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Lifecycle Components
    def lifecycle_version = "2.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Coroutines
    def coroutines_version = "1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Room
    def roomVersion = "2.4.1"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"

    // WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    // JSoup
    implementation 'org.jsoup:jsoup:1.13.1'

    // Flow reactive network
    implementation 'ru.beryukhov:flowreactivenetwork:1.0.4'

    // elib
    implementation 'foundation.e:elib:0.0.1-alpha11'
}
